import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { useLanguage } from "@/context/language-context";

// --- Types

type LocaleString = { vi: string; en: string };
type Level = "basic" | "intermediate" | "advanced";

interface Course {
  title: LocaleString;
  description: LocaleString;
  duration: LocaleString;
  schedule: LocaleString;
  level: Level;
  spotsText?: LocaleString; // for current courses
  price?: LocaleString; // for current courses & workshops
  startDate?: LocaleString;
  registrationOpens?: LocaleString; // for upcoming
  format: LocaleString;
  topics: LocaleString[];
}

interface Workshop {
  title: LocaleString;
  description: LocaleString;
  duration: LocaleString;
  date: LocaleString;
  time: LocaleString;
  price: LocaleString;
  spots: LocaleString; // capacity text
  format: LocaleString;
}

const levelLabel: Record<Level, LocaleString> = {
  basic: { vi: "C∆° b·∫£n", en: "Basic" },
  intermediate: { vi: "Trung c·∫•p", en: "Intermediate" },
  advanced: { vi: "N√¢ng cao", en: "Advanced" },
};

const ui = {
  headerTitle: { vi: "Kh√≥a h·ªçc & Ch∆∞∆°ng tr√¨nh", en: "Courses & Programs" },
  headerDesc: {
    vi: "C√°c ch∆∞∆°ng tr√¨nh h·ªçc ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ x√¢y d·ª±ng n·ªÅn t·∫£ng v·ªØng ch·∫Øc v·ªÅ h√≥a h·ªçc th√¥ng qua t∆∞ duy logic, ph·∫£n bi·ªán v√† c√°ch ti·∫øp c·∫≠n d·ª±a tr√™n b·∫±ng ch·ª©ng.",
    en: "Structured learning programs designed to build deep understanding of chemistry through logical progression, critical thinking, and evidence‚Äëbased approaches.",
  },
  tabs: {
    current: { vi: "Kh√≥a h·ªçc hi·ªán t·∫°i", en: "Current Courses" },
    upcoming: { vi: "S·∫Øp khai gi·∫£ng", en: "Upcoming Courses" },
    workshops: { vi: "H·ªôi th·∫£o", en: "Workshops" },
  },
  labels: {
    duration: { vi: "Th·ªùi l∆∞·ª£ng", en: "Duration" },
    schedule: { vi: "L·ªãch h·ªçc", en: "Schedule" },
    startDate: { vi: "Ng√†y b·∫Øt ƒë·∫ßu", en: "Start Date" },
    format: { vi: "H√¨nh th·ª©c", en: "Format" },
    price: { vi: "H·ªçc ph√≠", en: "Price" },
    topics: { vi: "Ch·ªß ƒë·ªÅ", en: "Course Topics" },
    registrationOpens: { vi: "M·ªü ƒëƒÉng k√Ω", en: "Registration Opens" },
    date: { vi: "Ng√†y", en: "Date" },
    time: { vi: "Th·ªùi gian", en: "Time" },
    capacity: { vi: "S·ªë l∆∞·ª£ng", en: "Capacity" },
  },
  cta: {
    registerNow: { vi: "ƒêƒÉng k√Ω ngay", en: "Register Now" },
    learnMore: { vi: "T√¨m hi·ªÉu th√™m", en: "Learn More" },
    getNotified: { vi: "Nh·∫≠n th√¥ng b√°o", en: "Get Notified" },
    registerWorkshop: { vi: "ƒêƒÉng k√Ω h·ªôi th·∫£o", en: "Register for Workshop" },
    langToggle: { vi: "EN", en: "VI" },
  },
  benefitsTitle: { vi: "V√¨ sao ch·ªçn kh√≥a h·ªçc c·ªßa t√¥i?", en: "Why Choose My Courses?" },
  benefits: [
    {
      icon: "üéØ",
      title: { vi: "L·ªô tr√¨nh b√†i b·∫£n", en: "Structured Learning" },
      desc: {
        vi: "Ti·∫øn tr√¨nh c√≥ h·ªá th·ªëng t·ª´ n·ªÅn t·∫£ng ƒë·∫øn n√¢ng cao",
        en: "Systematic progression from fundamentals to advanced concepts",
      },
    },
    {
      icon: "üë•",
      title: { vi: "Sƒ© s·ªë nh·ªè", en: "Small Class Sizes" },
      desc: {
        vi: "T∆∞∆°ng t√°c cao v√† quan t√¢m c√° nh√¢n h√≥a",
        en: "Personalized attention and interactive learning environment",
      },
    },
    {
      icon: "üî¨",
      title: { vi: "Th·ª±c h√†nh", en: "Hands‚ÄëOn Practice" },
      desc: {
        vi: "Th·ª±c nghi·ªám v√† gi·∫£i b√†i t·∫≠p th·ª±c ti·ªÖn",
        en: "Laboratory work and practical problem‚Äësolving sessions",
      },
    },
    {
      icon: "üìà",
      title: { vi: "Hi·ªáu qu·∫£ ƒë√£ ki·ªÉm ch·ª©ng", en: "Proven Results" },
      desc: {
        vi: "T·ªâ l·ªá ƒë·ªó ƒë·∫°i h·ªçc v√† th√†nh t√≠ch cao",
        en: "High success rates in university admissions and exams",
      },
    },
  ],
};

const currentCourses: Course[] = [
  {
    title: {
      vi: "H√≥a h·ªØu c∆° & Nhi·ªát ƒë·ªông n√¢ng cao ‚Äì Luy·ªán thi ƒë·∫°i h·ªçc",
      en: "Advanced Chemistry for University Preparation",
    },
    description: {
      vi: "Kh√≥a h·ªçc to√†n di·ªán v·ªÅ h·ªØu c∆°, nhi·ªát ƒë·ªông h·ªçc, ƒë·ªông h·ªçc ph·∫£n ·ª©ng v·ªõi tr·ªçng t√¢m √¥n thi ƒë·∫°i h·ªçc.",
      en: "Comprehensive course covering organic chemistry, thermodynamics, and kinetics with university entrance exam focus.",
    },
    duration: { vi: "16 tu·∫ßn", en: "16 weeks" },
    schedule: { vi: "Th·ª© 3 & Th·ª© 5, 19:00‚Äì21:00", en: "Tuesdays & Thursdays, 7:00‚Äì9:00 PM" },
    level: "advanced",
    spotsText: { vi: "C√≤n 12 ch·ªó", en: "12 spots remaining" },
    price: { vi: "8.500.000 VND", en: "8,500,000 VND" },
    startDate: { vi: "15/04/2024", en: "April 15, 2024" },
    format: { vi: "H·ªçc tr·ª±c ti·∫øp & Tr·ª±c tuy·∫øn (Hybrid)", en: "In‚Äëperson & Online Hybrid" },
    topics: [
      { vi: "H·ªØu c∆°", en: "Organic Chemistry" },
      { vi: "Nhi·ªát ƒë·ªông h·ªçc", en: "Thermodynamics" },
      { vi: "ƒê·ªông h·ªçc", en: "Kinetics" },
      { vi: "ƒêi·ªán h√≥a", en: "Electrochemistry" },
      { vi: "Chi·∫øn l∆∞·ª£c l√†m b√†i", en: "Exam Strategies" },
    ],
  },
  {
    title: { vi: "N·ªÅn t·∫£ng H√≥a h·ªçc tƒÉng c∆∞·ªùng", en: "Chemistry Fundamentals Intensive" },
    description: {
      vi: "X√¢y n·ªÅn t·∫£ng v·ªØng ch·∫Øc v·ªÅ c·∫•u t·∫°o nguy√™n t·ª≠, li√™n k·∫øt v√† h·ªá s·ªë ph·∫£n ·ª©ng qua h·ªçc t·∫≠p t∆∞∆°ng t√°c.",
      en: "Building strong foundations in atomic structure, bonding, and stoichiometry through interactive learning.",
    },
    duration: { vi: "12 tu·∫ßn", en: "12 weeks" },
    schedule: { vi: "Th·ª© 7, 09:00‚Äì12:00", en: "Saturdays, 9:00 AM‚Äì12:00 PM" },
    level: "basic",
    spotsText: { vi: "C√≤n 8 ch·ªó", en: "8 spots remaining" },
    price: { vi: "5.200.000 VND", en: "5,200,000 VND" },
    startDate: { vi: "20/04/2024", en: "April 20, 2024" },
    format: { vi: "H·ªçc tr·ª±c ti·∫øp", en: "In‚Äëperson" },
    topics: [
      { vi: "C·∫•u t·∫°o nguy√™n t·ª≠", en: "Atomic Structure" },
      { vi: "Li√™n k·∫øt h√≥a h·ªçc", en: "Chemical Bonding" },
      { vi: "T√≠nh to√°n h√≥a h·ªçc", en: "Stoichiometry" },
      { vi: "ƒê·ªãnh lu·∫≠t kh√≠", en: "Gas Laws" },
      { vi: "Dung d·ªãch", en: "Solutions" },
    ],
  },
];

const upcomingCourses: Course[] = [
  {
    title: { vi: "Ph∆∞∆°ng ph√°p Nghi√™n c·ª©u H√≥a h·ªçc", en: "Research Methods in Chemistry" },
    description: {
      vi: "Nh·∫≠p m√¥n nghi√™n c·ª©u khoa h·ªçc, ph√¢n t√≠ch d·ªØ li·ªáu v√† thi·∫øt k·∫ø th√≠ nghi·ªám cho sinh vi√™n y√™u th√≠ch h√≥a h·ªçc.",
      en: "Introduction to scientific research, data analysis, and experimental design for aspiring chemistry students.",
    },
    duration: { vi: "8 tu·∫ßn", en: "8 weeks" },
    schedule: { vi: "Cu·ªëi tu·∫ßn, 14:00‚Äì17:00", en: "Weekends, 2:00‚Äì5:00 PM" },
    level: "advanced",
    registrationOpens: { vi: "01/05/2024", en: "May 1, 2024" },
    startDate: { vi: "15/06/2024", en: "June 15, 2024" },
    format: { vi: "H·ªçc tr·ª±c ti·∫øp", en: "In‚Äëperson" },
    topics: [
      { vi: "Thi·∫øt k·∫ø nghi√™n c·ª©u", en: "Research Design" },
      { vi: "Ph√¢n t√≠ch d·ªØ li·ªáu", en: "Data Analysis" },
      { vi: "T·ªïng quan t√†i li·ªáu", en: "Literature Review" },
      { vi: "Vi·∫øt khoa h·ªçc", en: "Scientific Writing" },
      { vi: "K·ªπ thu·∫≠t ph√≤ng th√≠ nghi·ªám", en: "Lab Techniques" },
    ],
  },
  {
    title: { vi: "·ª®ng d·ª•ng H√≥a h·ªçc M√¥i tr∆∞·ªùng", en: "Environmental Chemistry Applications" },
    description: {
      vi: "Khai th√°c c√°c nguy√™n l√Ω h√≥a h·ªçc trong m√¥i tr∆∞·ªùng: √¥ nhi·ªÖm, ch·∫•t l∆∞·ª£ng kh√¥ng kh√≠ & n∆∞·ªõc, v√† gi·∫£i ph√°p xanh.",
      en: "Exploring chemical principles in environmental contexts, from pollution to green chemistry solutions.",
    },
    duration: { vi: "10 tu·∫ßn", en: "10 weeks" },
    schedule: { vi: "Th·ª© 2 & Th·ª© 4, 18:30‚Äì20:30", en: "Mondays & Wednesdays, 6:30‚Äì8:30 PM" },
    level: "intermediate",
    registrationOpens: { vi: "01/06/2024", en: "June 1, 2024" },
    startDate: { vi: "10/07/2024", en: "July 10, 2024" },
    format: { vi: "Tr·ª±c tuy·∫øn", en: "Online" },
    topics: [
      { vi: "Ch·∫•t l∆∞·ª£ng kh√¥ng kh√≠", en: "Air Quality" },
      { vi: "H√≥a h·ªçc n∆∞·ªõc", en: "Water Chemistry" },
      { vi: "H√≥a h·ªçc xanh", en: "Green Chemistry" },
      { vi: "B·ªÅn v·ªØng", en: "Sustainability" },
      { vi: "Ph√¢n t√≠ch m√¥i tr∆∞·ªùng", en: "Environmental Analysis" },
    ],
  },
  {
    title: { vi: "H√≥a h·ªçc chu·∫©n b·ªã Y khoa", en: "Chemistry for Medical School Preparation" },
    description: {
      vi: "Chu·∫©n b·ªã chuy√™n s√¢u cho k·ª≥ thi v√†o Y khoa, t·∫≠p trung Sinh h√≥a v√† H·ªØu c∆°.",
      en: "Specialized preparation for medical school entrance exams with focus on biochemistry and organic chemistry.",
    },
    duration: { vi: "20 tu·∫ßn", en: "20 weeks" },
    schedule: { vi: "Th·ª© 6 & Ch·ªß nh·∫≠t, 13:00‚Äì16:00", en: "Fridays & Sundays, 1:00‚Äì4:00 PM" },
    level: "advanced",
    registrationOpens: { vi: "15/07/2024", en: "July 15, 2024" },
    startDate: { vi: "01/09/2024", en: "September 1, 2024" },
    format: { vi: "H·ªçc tr·ª±c ti·∫øp & Tr·ª±c tuy·∫øn (Hybrid)", en: "In‚Äëperson & Online Hybrid" },
    topics: [
      { vi: "Sinh h√≥a", en: "Biochemistry" },
      { vi: "H·ªØu c∆°", en: "Organic Chemistry" },
      { vi: "·ª®ng d·ª•ng y khoa", en: "Medical Applications" },
      { vi: "K·ªπ thu·∫≠t l√†m b√†i", en: "Exam Techniques" },
      { vi: "Li√™n h·ªá l√¢m s√†ng", en: "Clinical Connections" },
    ],
  },
];

const workshops: Workshop[] = [
  {
    title: { vi: "An to√†n & K·ªπ thu·∫≠t Ph√≤ng th√≠ nghi·ªám", en: "Laboratory Safety & Techniques Workshop" },
    description: {
      vi: "Th·ª±c h√†nh c√°c nguy√™n t·∫Øc an to√†n v√† k·ªπ thu·∫≠t c∆° b·∫£n trong ph√≤ng th√≠ nghi·ªám.",
      en: "Hands‚Äëon workshop covering essential laboratory safety protocols and basic techniques.",
    },
    duration: { vi: "1 ng√†y", en: "1 day" },
    date: { vi: "30/04/2024", en: "April 30, 2024" },
    time: { vi: "09:00 ‚Äì 16:00", en: "9:00 AM ‚Äì 4:00 PM" },
    price: { vi: "750.000 VND", en: "750,000 VND" },
    spots: { vi: "T·ªëi ƒëa 15 ng∆∞·ªùi", en: "15 participants max" },
    format: { vi: "H·ªçc tr·ª±c ti·∫øp", en: "In‚Äëperson" },
  },
  {
    title: { vi: "Chi·∫øn l∆∞·ª£c Gi·∫£i b√†i t·∫≠p H√≥a h·ªçc", en: "Chemical Problem‚ÄëSolving Strategies" },
    description: {
      vi: "Kho√° tƒÉng c∆∞·ªùng v·ªÅ ph∆∞∆°ng ph√°p ti·∫øp c·∫≠n h·ªá th·ªëng ƒë·ªÉ gi·∫£i quy·∫øt b√†i to√°n h√≥a h·ªçc ph·ª©c t·∫°p.",
      en: "Intensive workshop on systematic approaches to solving complex chemistry problems.",
    },
    duration: { vi: "2 ng√†y", en: "2 days" },
    date: { vi: "18‚Äì19/05/2024", en: "May 18‚Äì19, 2024" },
    time: { vi: "10:00 ‚Äì 15:00", en: "10:00 AM ‚Äì 3:00 PM" },
    price: { vi: "1.200.000 VND", en: "1,200,000 VND" },
    spots: { vi: "T·ªëi ƒëa 20 ng∆∞·ªùi", en: "20 participants max" },
    format: { vi: "H·ªçc tr·ª±c ti·∫øp", en: "In‚Äëperson" },
  },
  {
    title: { vi: "Ph·ªèng v·∫•n ƒê·∫°i h·ªçc cho Sinh vi√™n H√≥a h·ªçc", en: "University Interview Preparation for Chemistry Students" },
    description: {
      vi: "Chu·∫©n b·ªã ph·ªèng v·∫•n v·ªõi tr·ªçng t√¢m ki·∫øn th·ª©c h√≥a h·ªçc v√† k·ªπ nƒÉng giao ti·∫øp.",
      en: "Preparation for university interviews with focus on chemistry knowledge and communication skills.",
    },
    duration: { vi: "1 ng√†y", en: "1 day" },
    date: { vi: "08/06/2024", en: "June 8, 2024" },
    time: { vi: "13:00 ‚Äì 18:00", en: "1:00 PM ‚Äì 6:00 PM" },
    price: { vi: "600.000 VND", en: "600,000 VND" },
    spots: { vi: "T·ªëi ƒëa 12 ng∆∞·ªùi", en: "12 participants max" },
    format: { vi: "H·ªçc tr·ª±c ti·∫øp", en: "In‚Äëperson" },
  },
];

const Courses = () => {
  const { language, toggleLanguage } = useLanguage();
  const L = language; // shorthand

  return (
    <div className="min-h-screen py-12">
      <div className="container mx-auto px-6">
        {/* Header */}
        <div className="flex items-start justify-between mb-12">
          <div className="text-left w-full">
            <h1 className="text-4xl font-serif font-bold text-primary mb-6">{ui.headerTitle[L]}</h1>
            <p className="text-xl text-muted-foreground max-w-3xl leading-relaxed">
              {ui.headerDesc[L]}
            </p>
          </div>
        </div>

        {/* Course Categories */}
        <Tabs defaultValue="current" className="w-full">
          <TabsList className="grid w-full grid-cols-3 mb-8">
            <TabsTrigger value="current">{ui.tabs.current[L]}</TabsTrigger>
            <TabsTrigger value="upcoming">{ui.tabs.upcoming[L]}</TabsTrigger>
            <TabsTrigger value="workshops">{ui.tabs.workshops[L]}</TabsTrigger>
          </TabsList>

          <TabsContent value="current">
            <div className="grid md:grid-cols-2 gap-8">
              {currentCourses.map((course, index) => (
                <Card key={index} className="hover:shadow-lg transition-shadow">
                  <CardHeader>
                    <div className="flex justify-between items-start mb-3">
                      <Badge
                        variant={
                          course.level === "basic"
                            ? "secondary"
                            : course.level === "intermediate"
                            ? "outline"
                            : "default"
                        }
                      >
                        {levelLabel[course.level][L]}
                      </Badge>
                      {course.spotsText && (
                        <span className="text-sm text-accent font-medium">{course.spotsText[L]}</span>
                      )}
                    </div>
                    <CardTitle className="font-serif text-xl">{course.title[L]}</CardTitle>
                    <CardDescription className="text-base leading-relaxed">
                      {course.description[L]}
                    </CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-3 mb-6">
                      <div className="flex justify-between text-sm">
                        <span className="text-muted-foreground">{ui.labels.duration[L]}:</span>
                        <span className="font-medium">{course.duration[L]}</span>
                      </div>
                      <div className="flex justify-between text-sm">
                        <span className="text-muted-foreground">{ui.labels.schedule[L]}:</span>
                        <span className="font-medium text-right">{course.schedule[L]}</span>
                      </div>
                      {course.startDate && (
                        <div className="flex justify-between text-sm">
                          <span className="text-muted-foreground">{ui.labels.startDate[L]}:</span>
                          <span className="font-medium">{course.startDate[L]}</span>
                        </div>
                      )}
                      <div className="flex justify-between text-sm">
                        <span className="text-muted-foreground">{ui.labels.format[L]}:</span>
                        <span className="font-medium">{course.format[L]}</span>
                      </div>
                      {course.price && (
                        <div className="flex justify-between text-sm">
                          <span className="text-muted-foreground">{ui.labels.price[L]}:</span>
                          <span className="font-bold text-accent">{course.price[L]}</span>
                        </div>
                      )}
                    </div>

                    <div className="mb-6">
                      <h4 className="text-sm font-medium mb-2">{ui.labels.topics[L]}:</h4>
                      <div className="flex flex-wrap gap-1">
                        {course.topics.map((topic, topicIndex) => (
                          <span key={topicIndex} className="text-xs bg-muted px-2 py-1 rounded">
                            {topic[L]}
                          </span>
                        ))}
                      </div>
                    </div>

                    <div className="flex gap-3">
                      <Button className="flex-1 bg-accent hover:bg-accent/90">
                        {ui.cta.registerNow[L]}
                      </Button>
                      <Button variant="outline">{ui.cta.learnMore[L]}</Button>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          <TabsContent value="upcoming">
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
              {upcomingCourses.map((course, index) => (
                <Card key={index} className="hover:shadow-lg transition-shadow">
                  <CardHeader>
                    <Badge
                      variant={
                        course.level === "basic"
                          ? "secondary"
                          : course.level === "intermediate"
                          ? "outline"
                          : "default"
                      }
                      className="w-fit mb-3"
                    >
                      {levelLabel[course.level][L]}
                    </Badge>
                    <CardTitle className="font-serif text-lg">{course.title[L]}</CardTitle>
                    <CardDescription className="leading-relaxed">
                      {course.description[L]}
                    </CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-3 mb-6">
                      <div className="flex justify-between text-sm">
                        <span className="text-muted-foreground">{ui.labels.duration[L]}:</span>
                        <span className="font-medium">{course.duration[L]}</span>
                      </div>
                      <div className="flex justify-between text-sm">
                        <span className="text-muted-foreground">{ui.labels.schedule[L]}:</span>
                        <span className="font-medium text-right text-xs">{course.schedule[L]}</span>
                      </div>
                      {course.registrationOpens && (
                        <div className="flex justify-between text-sm">
                          <span className="text-muted-foreground">{ui.labels.registrationOpens[L]}:</span>
                          <span className="font-medium text-accent text-xs">{course.registrationOpens[L]}</span>
                        </div>
                      )}
                      {course.startDate && (
                        <div className="flex justify-between text-sm">
                          <span className="text-muted-foreground">{ui.labels.startDate[L]}:</span>
                          <span className="font-medium text-xs">{course.startDate[L]}</span>
                        </div>
                      )}
                      <div className="flex justify-between text-sm">
                        <span className="text-muted-foreground">{ui.labels.format[L]}:</span>
                        <span className="font-medium text-xs">{course.format[L]}</span>
                      </div>
                    </div>

                    <div className="mb-6">
                      <h4 className="text-sm font-medium mb-2">{ui.labels.topics[L]}:</h4>
                      <div className="flex flex-wrap gap-1">
                        {course.topics.map((topic, topicIndex) => (
                          <span key={topicIndex} className="text-xs bg-muted px-2 py-1 rounded">
                            {topic[L]}
                          </span>
                        ))}
                      </div>
                    </div>

                    <Button variant="outline" size="sm" className="w-full">
                      {ui.cta.getNotified[L]}
                    </Button>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          <TabsContent value="workshops">
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
              {workshops.map((w, index) => (
                <Card key={index} className="hover:shadow-lg transition-shadow">
                  <CardHeader>
                    <CardTitle className="font-serif text-lg">{w.title[L]}</CardTitle>
                    <CardDescription className="leading-relaxed">{w.description[L]}</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-3 mb-6">
                      <div className="flex justify-between text-sm">
                        <span className="text-muted-foreground">{ui.labels.duration[L]}:</span>
                        <span className="font-medium">{w.duration[L]}</span>
                      </div>
                      <div className="flex justify-between text-sm">
                        <span className="text-muted-foreground">{ui.labels.date[L]}:</span>
                        <span className="font-medium">{w.date[L]}</span>
                      </div>
                      <div className="flex justify-between text-sm">
                        <span className="text-muted-foreground">{ui.labels.time[L]}:</span>
                        <span className="font-medium text-xs">{w.time[L]}</span>
                      </div>
                      <div className="flex justify-between text-sm">
                        <span className="text-muted-foreground">{ui.labels.price[L]}:</span>
                        <span className="font-bold text-accent">{w.price[L]}</span>
                      </div>
                      <div className="flex justify-between text-sm">
                        <span className="text-muted-foreground">{ui.labels.capacity[L]}:</span>
                        <span className="font-medium text-xs">{w.spots[L]}</span>
                      </div>
                      <div className="flex justify-between text-sm">
                        <span className="text-muted-foreground">{ui.labels.format[L]}:</span>
                        <span className="font-medium">{w.format[L]}</span>
                      </div>
                    </div>

                    <Button size="sm" className="w-full bg-accent hover:bg-accent/90">
                      {ui.cta.registerWorkshop[L]}
                    </Button>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>
        </Tabs>

        {/* Course Benefits Section */}
        <div className="mt-16 bg-secondary rounded-lg p-8">
          <h2 className="text-2xl font-serif font-bold text-primary mb-6 text-center">{ui.benefitsTitle[L]}</h2>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
            {ui.benefits.map((b, i) => (
              <div className="text-center" key={i}>
                <div className="w-12 h-12 bg-accent/10 rounded-full flex items-center justify-center mx-auto mb-4">
                  <span className="text-xl">{b.icon}</span>
                </div>
                <h3 className="font-semibold mb-2">{b.title[L]}</h3>
                <p className="text-sm text-muted-foreground">{b.desc[L]}</p>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Courses;

